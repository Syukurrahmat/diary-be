generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Entry {
  id        Int       @id @default(autoincrement())
  journalId Int
  content   String    @db.VarChar(2000)
  datetime  DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  journal   Journal   @relation(fields: [journalId], references: [id])
  images    Image[]
  location  Location?
  tags      Tag[]     @relation("EntrytoTag")
}

model Image {
  id        Int      @id @default(autoincrement())
  entryId   Int
  imageUrl  String
  height    Int
  width     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  entry     Entry    @relation(fields: [entryId], references: [id])

  @@index([entryId])
}

model Location {
  id        Int      @id @default(autoincrement())
  entryId   Int      @unique
  latitude  Float
  longitude Float
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  entry     Entry    @relation(fields: [entryId], references: [id])
}

model Tag {
  id        Int      @id @default(autoincrement())
  userId    Int
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  entries   Entry[]  @relation("EntrytoTag")

  @@unique([userId, name])
}

model Journal {
  id        Int      @id @default(autoincrement())
  userId    Int
  date      DateTime @db.Date
  summary   String?  @db.VarChar(2000)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  entries   Entry[]
  user      User     @relation(fields: [userId], references: [id])
  habits    Habit[]  @relation("HabitToJournal")

  @@unique([userId, date])
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  timezone  String
  hashedRt  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  habbits   Habit[]
  journals  Journal[]
  tags      Tag[]
}

model Habit {
  id        Int       @id @default(autoincrement())
  userId    Int
  name      String
  icon      String
  color     String
  order     Int?      @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  user      User      @relation(fields: [userId], references: [id])
  journals  Journal[] @relation("HabitToJournal")

  @@unique([userId, name])
}
